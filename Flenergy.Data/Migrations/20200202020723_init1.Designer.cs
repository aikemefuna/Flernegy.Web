// <auto-generated />
using System;
using Flenergy.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Flenergy.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200202020723_init1")]
    partial class init1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Flenergy.Data.Models.Adm_Gateway", b =>
                {
                    b.Property<int>("Adm_GatewayId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Gateway");

                    b.Property<string>("SinglePaymentUrl");

                    b.Property<string>("SplitPaymentUrl");

                    b.Property<string>("StatusUrl");

                    b.HasKey("Adm_GatewayId");

                    b.ToTable("Adm_Gateway");
                });

            modelBuilder.Entity("Flenergy.Data.Models.Adm_Meter", b =>
                {
                    b.Property<int>("Adm_MeterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<string>("MeterType");

                    b.Property<string>("Meterno");

                    b.HasKey("Adm_MeterId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Adm_Meter");
                });

            modelBuilder.Entity("Flenergy.Data.Models.Adm_ServiceCharge", b =>
                {
                    b.Property<int>("Adm_ServiceChargeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("ChargeRate");

                    b.Property<string>("ChargeType");

                    b.Property<int>("EstateId");

                    b.Property<bool>("IsChargeSplitted");

                    b.Property<double>("TechnicalCharge");

                    b.HasKey("Adm_ServiceChargeId");

                    b.HasIndex("EstateId");

                    b.ToTable("Adm_ServiceCharge");
                });

            modelBuilder.Entity("Flenergy.Data.Models.BillingCategory", b =>
                {
                    b.Property<int>("BillingCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("BillingAmount");

                    b.Property<string>("BillingCategoryName");

                    b.HasKey("BillingCategoryId");

                    b.ToTable("BillingCategory");
                });

            modelBuilder.Entity("Flenergy.Data.Models.Channel", b =>
                {
                    b.Property<int>("ChannelId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChannelName");

                    b.HasKey("ChannelId");

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("Flenergy.Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNo");

                    b.Property<string>("Address");

                    b.Property<int>("BillingCategoryId");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<DateTime?>("DateModified");

                    b.Property<int>("EstateId");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("LGA");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("State");

                    b.Property<string>("UserCreated");

                    b.Property<string>("UserModified");

                    b.HasKey("CustomerId");

                    b.HasIndex("BillingCategoryId");

                    b.HasIndex("EstateId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Flenergy.Data.Models.CustomerPinVendingProfile", b =>
                {
                    b.Property<int>("CustomerPinVendingProfileId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount");

                    b.Property<int>("ChannelId");

                    b.Property<DateTime>("DatePurchased");

                    b.Property<int>("EstateResidentId");

                    b.Property<string>("Pin");

                    b.Property<string>("Units");

                    b.HasKey("CustomerPinVendingProfileId");

                    b.HasIndex("ChannelId");

                    b.HasIndex("EstateResidentId");

                    b.ToTable("CustomerPinVendingProfiles");
                });

            modelBuilder.Entity("Flenergy.Data.Models.Disco", b =>
                {
                    b.Property<int>("DiscoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("DiscoName");

                    b.Property<string>("State");

                    b.HasKey("DiscoId");

                    b.ToTable("Discos");
                });

            modelBuilder.Entity("Flenergy.Data.Models.Estate", b =>
                {
                    b.Property<int>("EstateId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Email");

                    b.Property<string>("EstateCode");

                    b.Property<string>("EstateName");

                    b.Property<string>("LogoUrl");

                    b.Property<double>("NoOfCustomers");

                    b.Property<double>("NumberOfResident");

                    b.Property<string>("PhoneNo");

                    b.HasKey("EstateId");

                    b.ToTable("Estates");
                });

            modelBuilder.Entity("Flenergy.Data.Models.EstateAdmin", b =>
                {
                    b.Property<int>("EstateAdminId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("EstateAdminNumber");

                    b.Property<int>("EstateId");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<string>("LGA");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleName");

                    b.Property<string>("State");

                    b.HasKey("EstateAdminId");

                    b.HasIndex("EstateId");

                    b.ToTable("EstateAdmins");
                });

            modelBuilder.Entity("Flenergy.Data.Models.Feedback", b =>
                {
                    b.Property<int>("FeedbackId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId");

                    b.Property<string>("FeedbackMessage");

                    b.HasKey("FeedbackId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("Flenergy.Data.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EstateId");

                    b.Property<string>("NotificationMessage");

                    b.HasKey("NotificationId");

                    b.HasIndex("EstateId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Flenergy.Data.Models.PaymentSplit", b =>
                {
                    b.Property<int>("PaymentSplitId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName");

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(10);

                    b.Property<string>("BankCode");

                    b.Property<bool>("DeductFeeFrom");

                    b.Property<int>("EstateId");

                    b.Property<bool>("IsAdminAccount");

                    b.Property<bool>("IsEstateAccount");

                    b.Property<bool>("IsTechnicalChargeAccount");

                    b.HasKey("PaymentSplitId");

                    b.HasIndex("EstateId");

                    b.ToTable("PaymentSplits");
                });

            modelBuilder.Entity("Flenergy.Data.Models.Wallet", b =>
                {
                    b.Property<int>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Amount");

                    b.Property<int>("EstateId");

                    b.Property<string>("TransId");

                    b.HasKey("WalletId");

                    b.HasIndex("EstateId");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Flenergy.Data.Models.Adm_Meter", b =>
                {
                    b.HasOne("Flenergy.Data.Models.Customer", "Customer")
                        .WithMany("Adm_Meters")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Flenergy.Data.Models.Adm_ServiceCharge", b =>
                {
                    b.HasOne("Flenergy.Data.Models.Estate", "Estate")
                        .WithMany()
                        .HasForeignKey("EstateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Flenergy.Data.Models.Customer", b =>
                {
                    b.HasOne("Flenergy.Data.Models.BillingCategory", "BillingCategory")
                        .WithMany()
                        .HasForeignKey("BillingCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Flenergy.Data.Models.Estate", "Estate")
                        .WithMany("Customers")
                        .HasForeignKey("EstateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Flenergy.Data.Models.CustomerPinVendingProfile", b =>
                {
                    b.HasOne("Flenergy.Data.Models.Channel", "Channel")
                        .WithMany()
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Flenergy.Data.Models.Customer", "EstateResident")
                        .WithMany()
                        .HasForeignKey("EstateResidentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Flenergy.Data.Models.EstateAdmin", b =>
                {
                    b.HasOne("Flenergy.Data.Models.Estate", "Estate")
                        .WithMany("EstateAdmins")
                        .HasForeignKey("EstateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Flenergy.Data.Models.Feedback", b =>
                {
                    b.HasOne("Flenergy.Data.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Flenergy.Data.Models.Notification", b =>
                {
                    b.HasOne("Flenergy.Data.Models.Estate", "Estate")
                        .WithMany("Notifications")
                        .HasForeignKey("EstateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Flenergy.Data.Models.PaymentSplit", b =>
                {
                    b.HasOne("Flenergy.Data.Models.Estate", "Estate")
                        .WithMany()
                        .HasForeignKey("EstateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Flenergy.Data.Models.Wallet", b =>
                {
                    b.HasOne("Flenergy.Data.Models.Estate", "Estate")
                        .WithMany()
                        .HasForeignKey("EstateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
